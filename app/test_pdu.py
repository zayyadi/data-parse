# Generated by CodiumAI
from app.main import DataParse


import pytest


class TestDataParse:
    # Parsing a valid input message returns a DataParse object with all fields populated correctly
    def test_valid_input_message(self):
        # Arrange
        input_message = {
            "service_type": "SMS",
            "source_addr_ton": "1",
            "source_addr_npi": "1",
            "source_addr": "1234567890",
            "dest_addr_ton": "1",
            "dest_addr_npi": "1",
            "destination_addr": "0987654321",
            "esm_class": "0",
            "protocol_id": "0",
            "priority_flag": "0",
            "schedule_delivery_time": "",
            "validity_period": "",
            "registered_delivery": "0",
            "replace_if_present_flag": "0",
            "data_coding": "0",
            "sm_default_msg_id": "0",
            "short_message": "Hello, World!",
        }

        # Act
        result = DataParse(**input_message)

        # Assert
        assert result.service_type == input_message["service_type"]
        assert result.source_addr_ton == input_message["source_addr_ton"]
        assert result.source_addr_npi == input_message["source_addr_npi"]
        assert result.source_addr == input_message["source_addr"]
        assert result.dest_addr_ton == input_message["dest_addr_ton"]
        assert result.dest_addr_npi == input_message["dest_addr_npi"]
        assert result.destination_addr == input_message["destination_addr"]
        assert result.esm_class == input_message["esm_class"]
        assert result.protocol_id == input_message["protocol_id"]
        assert result.priority_flag == input_message["priority_flag"]
        assert result.schedule_delivery_time == input_message["schedule_delivery_time"]
        assert result.validity_period == input_message["validity_period"]
        assert result.registered_delivery == input_message["registered_delivery"]
        assert (
            result.replace_if_present_flag == input_message["replace_if_present_flag"]
        )
        assert result.data_coding == input_message["data_coding"]
        assert result.sm_default_msg_id == input_message["sm_default_msg_id"]
        assert result.short_message == input_message["short_message"]
